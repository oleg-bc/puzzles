let arr = [1, 3, 5, 6, 4, 2];
//[1, 2, 3, 4, 5, 6] expected
function makeNew(a) {
    let b = [];
    let c = [];
    let d = [];
    for (let i = 0; i < a.length; i++) {

        if (i % 2 == 0) {
            b.push(a[i]);
        } else {
            b.push("x");
        }
    }
    console.log("FIRST LOOP OVER")
    for (let e = 1; e < a.length; e++) {

        if (e % 2 != 0 && a[e]) {
            c.push(a[e])

        } else { c.push("x"); }
    }
    c = c.reverse();
    console.log(b, c)
    for (let i = 0; i < b.length; i++) {
        d.push(b[i]);
        d.push(c[i])
    }
    console.log(d)
}

makeNew(arr);
/*
You are given an array of integers a.A new array b is generated by rearranging the elements of a in the following way:

b[0] is equal to a[0];
b[1] is equal to the last element of a;
b[2] is equal to a[1];
b[3] is equal to the second - last element of a;
and so on.
Your task is to determine whether the new array b is sorted in strictly ascending order or not.

1. create a new arr
2. fill with xs
3. fill other values
4. fill remaining values


Example

For a = [1, 3, 5, 6, 4, 2], the output should be alternatingSort(a) = true.

The new array b will look like[1, 2, 3, 4, 5, 6], which is in strictly ascending order, so the answer is true.

For a = [1, 4, 5, 6, 3], the output should be alternatingSort(a) = false.

The new array b will look like[1, 3, 4, 6, 5], which is not in strictly ascending order, so the answer is false.

Input / Output

    [execution time limit] 4 seconds(js)

[input] array.integer a

The given array of integers.

Guaranteed constraints:
    1≤ a.length≤ 105, -109≤ a[i]≤ 109.

    [output] boolean

A boolean representing whether the new array b will be sorted in strictly ascending order or not.
    [JavaScript(ES6)] Syntax Tips
*/